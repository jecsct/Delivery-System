services:
  postgresdb:
    image: postgres:latest
    container_name: postgres-orders
    restart: unless-stopped
    ports:
      - "5332:5432"
    environment:
      POSTGRES_DB: Orders_DB
      POSTGRES_PASSWORD: admin_joao
      POSTGRES_USER: admin_joao
      PGDATA: /data/postgres
    volumes:
      - postgresdb:/data/postgres

  mongodb:
    image: mongo:latest
    container_name: mongodb-payments-service
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin_joao
      MONGO_INITDB_ROOT_PASSWORD: admin_joao
      MONGO_INITDB_DATABASE: payment-service-db
    volumes:
      - mongodb_data:/data/db
#      - type: bind
#        source: ./data
#        target: /data/db

  kafka:
    image: apache/kafka-native
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  postgresdb:
    driver: bridge

volumes:
  postgresdb:
  mongodb_data:
